<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kk.apollo.biz.dao.feedback.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.kk.apollo.biz.model.feedback.Feedback" >
    <id column="feedback_id" property="feedbackId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="feedback_type" property="feedbackType" jdbcType="VARCHAR" />
    <result column="feedback_conWay" property="feedbackConway" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.kk.apollo.biz.model.feedback.Feedback" extends="BaseResultMap" >
    <result column="feedback_content" property="feedbackContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    feedback_id, user_id, feedback_type, feedback_conWay
  </sql>
  <sql id="Blob_Column_List" >
    feedback_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kk.apollo.biz.model.feedback.Feedback" >
    insert into feedback (feedback_id, user_id, feedback_type, 
      feedback_conWay, feedback_content)
    values (#{feedbackId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{feedbackType,jdbcType=VARCHAR}, 
      #{feedbackConway,jdbcType=VARCHAR}, #{feedbackContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kk.apollo.biz.model.feedback.Feedback" >
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="feedbackId != null" >
        feedback_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="feedbackType != null" >
        feedback_type,
      </if>
      <if test="feedbackConway != null" >
        feedback_conWay,
      </if>
      <if test="feedbackContent != null" >
        feedback_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="feedbackId != null" >
        #{feedbackId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="feedbackType != null" >
        #{feedbackType,jdbcType=VARCHAR},
      </if>
      <if test="feedbackConway != null" >
        #{feedbackConway,jdbcType=VARCHAR},
      </if>
      <if test="feedbackContent != null" >
        #{feedbackContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kk.apollo.biz.model.feedback.Feedback" >
    update feedback
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="feedbackType != null" >
        feedback_type = #{feedbackType,jdbcType=VARCHAR},
      </if>
      <if test="feedbackConway != null" >
        feedback_conWay = #{feedbackConway,jdbcType=VARCHAR},
      </if>
      <if test="feedbackContent != null" >
        feedback_content = #{feedbackContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kk.apollo.biz.model.feedback.Feedback" >
    update feedback
    set user_id = #{userId,jdbcType=INTEGER},
      feedback_type = #{feedbackType,jdbcType=VARCHAR},
      feedback_conWay = #{feedbackConway,jdbcType=VARCHAR},
      feedback_content = #{feedbackContent,jdbcType=LONGVARCHAR}
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kk.apollo.biz.model.feedback.Feedback" >
    update feedback
    set user_id = #{userId,jdbcType=INTEGER},
      feedback_type = #{feedbackType,jdbcType=VARCHAR},
      feedback_conWay = #{feedbackConway,jdbcType=VARCHAR}
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
</mapper>